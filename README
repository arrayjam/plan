--- 03-08-16 ---

* alias np='vim +"execute \"normal! Go--- $(date '+%d-%m-%y') ---\<cr>\<cr>\"" ~/.plan && pushd $(dirname $(readlink ~/.plan)) >/dev/null && git add . && git commit -m "$(date)" && git push origin 2>&1 > ~/plan-push.log; popd>/dev/null'

* alias p='vim +"execute \"normal! Go\"" ~/.plan && pushd $(dirname $(readlink ~/.plan)) >/dev/null && git add . && git commit -m "$(date)" && git push origin 2>&1 > ~/plan-push.log; popd>/dev/null'

* learned about vim's normal/normal! command and execute "normal! ggDGihaha\<esc>"

* tmutils restore: tmutil restore -v /Volumes/Time\ Machine\ Backups/Backups.backupdb/Monyafeek/2016-08-02-141506/Macintosh\ HD/Users/arrayjam/.vimrc ~/.vimrc

idea: nearby.yuri.io written in scheme? parse json into geojson... figure out nearest object detection, maybe even write webserver?

--- 03-08-16 ---

* Apache ProxyPass and ProxyPassReverse

* Put this on a server with private gpg blocks and a private key, but passphrased

--- 04-08-16 ---

* Tested gpg block decryption system

--- 05-08-16 ---

-----BEGIN PGP MESSAGE-----

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
S9vJR0CnN46RTR400+l5HfXhOw==
=Kzp8
-----END PGP MESSAGE-----

* Learning more about Typescript

* Starting on jsly.

* Can't use mouseover events in blessed over tmux.

* Augmented some types, only use explicit style options in Element.

* Possibly contribute back blessings/index.d.ts if it gets a lot of modifications.

* Try and use default blessing and Typescript for jsly, but think about bringing in react-blessing and hot reloading.

* First sketch out possible user actions and UI, just to get an idea of requirements

* Create simple JSON viewer as proof-of-concept


--- 11-08-16 ---

-----BEGIN PGP MESSAGE-----

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
=GKLe
-----END PGP MESSAGE-----


--- 11-08-16 ---

* Looked into CoS data portal

* Typings for Trello client.js

--- 12-08-16 ---

* Set up React, Webpack and Typescript together

* Finished typings for Trello client.js

* Made some test Trello API calls

--- 13-08-16 ---

* Some more turf.js typings

--- 14-08-16 ---

* Chapter 1 and 2 of The Little Schemer


